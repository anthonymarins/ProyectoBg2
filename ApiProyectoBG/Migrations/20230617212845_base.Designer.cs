// <auto-generated />
using ApiBalance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiProyectoBG.Migrations
{
    [DbContext(typeof(BGContext))]
    [Migration("20230617212845_base")]
    partial class @base
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiBalance.Modelo.CuentasI", b =>
                {
                    b.Property<int>("IdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCuenta"));

                    b.Property<string>("NombreCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaldoCuentas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipoCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCuenta");

                    b.ToTable("Cuentas");

                    b.HasData(
                        new
                        {
                            IdCuenta = 1,
                            NombreCuenta = "Banco",
                            SaldoCuentas = 1500m,
                            tipoCuenta = "Activo"
                        });
                });

            modelBuilder.Entity("ApiBalance.Modelo.Entradas", b =>
                {
                    b.Property<int>("IdCuenta")
                        .HasColumnType("int");

                    b.Property<int>("IdTransaccion")
                        .HasColumnType("int");

                    b.Property<decimal>("entradas")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCuenta");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("ApiBalance.Modelo.Salidas", b =>
                {
                    b.Property<int>("IdCuenta")
                        .HasColumnType("int");

                    b.Property<int>("IdTransaccion")
                        .HasColumnType("int");

                    b.Property<decimal>("salidas")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCuenta");

                    b.ToTable("Salidas");
                });

            modelBuilder.Entity("ApiBalance.Modelo.Entradas", b =>
                {
                    b.HasOne("ApiBalance.Modelo.CuentasI", "cuentasI")
                        .WithMany()
                        .HasForeignKey("IdCuenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cuentasI");
                });

            modelBuilder.Entity("ApiBalance.Modelo.Salidas", b =>
                {
                    b.HasOne("ApiBalance.Modelo.CuentasI", "cuentasI")
                        .WithMany()
                        .HasForeignKey("IdCuenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cuentasI");
                });
#pragma warning restore 612, 618
        }
    }
}
